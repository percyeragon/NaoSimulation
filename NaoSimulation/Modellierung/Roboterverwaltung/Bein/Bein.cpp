// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define NaoSimulation_Modellierung_Roboterverwaltung_Bein_Bein_BODY

/************************************************************
 Bein class body
 ************************************************************/

// include associated header file
#include "Bein.h"


namespace NaoSimulation {
namespace Modellierung {
namespace Roboterverwaltung {
namespace Bein {

Bein::~Bein() {
	delete knie;
	delete sprunggelenk;
	delete oberschenkel;
	delete schienbein;
	delete fuss;
}

Bein* Bein::erzeugeLinkesBein(
		Oberschenkel* oberschenkel,
		Knie* knie,
		Schienbein* schienbein,
		Sprunggelenk* sprunggelenk,
		Fuss* fuss,
		NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt
) {
	// Teste, ob in den Parametern Koerperteile oder Gelenke uebergeben wurden (jeweils != nullptr)
	// sonst erzeuge das jeweilige Koerperteil/Gelenk
	oberschenkel 	= oberschenkel == nullptr ? Oberschenkel::erzeugeLinkenOberschenkel(welt) : oberschenkel;
	schienbein		= schienbein == nullptr ? Schienbein::erzeugeLinkesSchienbein(welt) : schienbein;
	fuss			= fuss == nullptr ? Fuss::erzeugeLinkenFuss(welt) : fuss;
	knie			= knie == nullptr ? Knie::erzeugeLinkesKnie(oberschenkel, schienbein, welt) : knie;
	sprunggelenk	= sprunggelenk == nullptr ? Sprunggelenk::erzeugeLinkesSprunggelenk(fuss, schienbein, welt) : sprunggelenk;

	// Baue alles im Konstruktor zusammen
	Bein* bein = new Bein(oberschenkel, knie, schienbein, sprunggelenk, fuss);

	return bein;
}
	
Bein* Bein::erzeugeRechtesBein(
		Oberschenkel* oberschenkel,
		Knie* knie,
		Schienbein* schienbein,
		Sprunggelenk* sprunggelenk,
		Fuss* fuss,
		NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt
) {
	// Teste, ob in den Parametern Koerperteile oder Gelenke uebergeben wurden (jeweils != nullptr)
	// sonst erzeuge das jeweilige Koerperteil/Gelenk
	oberschenkel 	= oberschenkel == nullptr ? Oberschenkel::erzeugeRechtenOberschenkel(welt) : oberschenkel;
	schienbein		= schienbein == nullptr ? Schienbein::erzeugeRechtesSchienbein(welt) : schienbein;
	fuss			= fuss == nullptr ? Fuss::erzeugeRechtenFuss(welt) : fuss;
	knie			= knie == nullptr ? Knie::erzeugeRechtesKnie(oberschenkel, schienbein, welt) : knie;
	sprunggelenk	= sprunggelenk == nullptr ? Sprunggelenk::erzeugeRechtesSprunggelenk(fuss, schienbein, welt) : sprunggelenk;

	// Baue alles im Konstruktor zusammen
	Bein* bein = new Bein(oberschenkel, knie, schienbein, sprunggelenk, fuss);

	return bein;
}

Oberschenkel* Bein::getOberschenkel() {
	return oberschenkel;
}

Knie* Bein::getKnie() {
	return knie;
}

Schienbein* Bein::getSchienbein() {
	return schienbein;
}

Sprunggelenk* Bein::getSprunggelenk() {
	return sprunggelenk;
}

Fuss* Bein::getFuss() {
	return fuss;
}

bool Bein::inBewegung() {
	// Das Bein ist in Bewegung, wenn sich eines der Beingelenke bewegt
	return knie->inBewegung() || sprunggelenk->inBewegung();
}

} // of namespace Bein
} // of namespace Roboterverwaltung
} // of namespace Modellierung
} // of namespace NaoSimulation

/************************************************************
 End of Bein class body
 ************************************************************/
