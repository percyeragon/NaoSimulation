// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define NaoSimulation_Modellierung_Roboterverwaltung_Arm_Arm_BODY

/************************************************************
 Arm class body
 ************************************************************/

// include associated header file
#include "Arm.h"


namespace NaoSimulation {
namespace Modellierung {
namespace Roboterverwaltung {
namespace Arm {

Arm::~Arm() {
	delete handgelenk;
	delete ellenbogen;
	delete hand;
	delete unterarm;
	delete oberarm;
}

Arm* Arm::erzeugeLinkenArm(
	Oberarm *oberarm,
	Ellenbogen *ellenbogen,
	Unterarm *unterarm,
	Handgelenk *handgelenk,
	Hand *hand,
	NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt
) {
	// Teste, ob in den Parametern Koerperteile oder Gelenke uebergeben wurden (jeweils != nullptr)
	// sonst erzeuge das jeweilige Koerperteil/Gelenk
	oberarm 	= oberarm == nullptr 	? Oberarm::erzeugeLinkenOberarm(welt) 							: oberarm;
	unterarm	= unterarm == nullptr 	? Unterarm::erzeugeLinkenUnterarm(welt) 						: unterarm;
	hand		= hand == nullptr 		? Hand::erzeugeLinkeHand(welt) 									: hand;
	ellenbogen	= ellenbogen == nullptr ? Ellenbogen::erzeugeLinkenEllenbogen(oberarm, unterarm, welt) 	: ellenbogen;
	handgelenk	= handgelenk == nullptr ? Handgelenk::erzeugeLinkesHandgelenk(unterarm, hand, welt) 	: handgelenk;

	

	// Baue alles im Konstruktor zusammen
	Arm* arm = new Arm(oberarm, ellenbogen, unterarm, handgelenk, hand);

	return arm;
}

Arm* Arm::erzeugeRechtenArm(
	Oberarm *oberarm,
	Ellenbogen *ellenbogen,
	Unterarm *unterarm,
	Handgelenk *handgelenk,
	Hand *hand,
	NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt
) {
	// Teste, ob in den Parametern Koerperteile oder Gelenke uebergeben wurden (jeweils != nullptr)
	// sonst erzeuge das jeweilige Koerperteil/Gelenk
	oberarm 	= oberarm == nullptr 	? Oberarm::erzeugeRechtenOberarm(welt) 							: oberarm;
	unterarm	= unterarm == nullptr 	? Unterarm::erzeugeRechtenUnterarm(welt) 						: unterarm;
	hand		= hand == nullptr 		? Hand::erzeugeRechteHand(welt) 								: hand;
	ellenbogen	= ellenbogen == nullptr ? Ellenbogen::erzeugeRechterEllenbogen(oberarm, unterarm, welt) : ellenbogen;
	handgelenk	= handgelenk == nullptr ? Handgelenk::erzeugeRechtesHandgelenk(unterarm, hand, welt) 	: handgelenk;

	// Baue alles im Konstruktor zusammen
	Arm* arm = new Arm(oberarm, ellenbogen, unterarm, handgelenk, hand);

	return arm;
}

Oberarm* Arm::getOberarm() {
	return oberarm;
}

Ellenbogen* Arm::getEllenbogen() {
	return ellenbogen;
}

Unterarm* Arm::getUnterarm() {
	return unterarm;
}

Handgelenk* Arm::getHandgelenk() {
	return handgelenk;
}

Hand* Arm::getHand() {
	return hand;
}

bool Arm::inBewegung() {
	// der Arm ist in Bewegung, wenn sich eines der Armgelenke bewegt
	return ellenbogen->inBewegung() || handgelenk->inBewegung();
}

} // of namespace Arm
} // of namespace Roboterverwaltung
} // of namespace Modellierung
} // of namespace NaoSimulation

/************************************************************
 End of Arm class body
 ************************************************************/
