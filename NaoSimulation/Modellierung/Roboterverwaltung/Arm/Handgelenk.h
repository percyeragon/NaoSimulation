// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef NAOSIMULATION_MODELLIERUNG_ROBOTERVERWALTUNG_ARM_HANDGELENK_H
#define NAOSIMULATION_MODELLIERUNG_ROBOTERVERWALTUNG_ARM_HANDGELENK_H

/************************************************************
 Handgelenk class header
 ************************************************************/

//#include "NaoSimulation/Modellierung/Roboterverwaltung/Arm/Pkg_Arm.h"

#include "../../../Entwurf/NaoModel/Gelenke/Scharniergelenk.h"
#include "../Freiheitsgrad.h"
#include "../../../../PrimitiveTypes/Pkg_PrimitiveTypes.h"

#include "Hand.h"
#include "Unterarm.h"


/*
namespace NaoSimulation {
namespace Modellierung {
namespace Roboterverwaltung {
namespace Arm {
class Hand;
}
}
}
}
namespace NaoSimulation {
namespace Modellierung {
namespace Roboterverwaltung {
namespace Arm {
class Unterarm;
}
}
}
}
*/
namespace NaoSimulation {
namespace Modellierung {
namespace Roboterverwaltung {
namespace Arm {

/************************************************************/
/**
 * 
 */
class Handgelenk: public ::NaoSimulation::Entwurf::NaoModel::Gelenke::Scharniergelenk {
public:

	/**
	 * 
	 */
	::NaoSimulation::Modellierung::Roboterverwaltung::Freiheitsgrad fg;

	// Copy-Konstruktor
    Handgelenk(Handgelenk& handgelenk, Hand* hand, Unterarm* unterarm):
        fg(handgelenk.fg.getWinkel(), handgelenk.fg.getWinkelMin(), handgelenk.fg.getWinkelMax()),
        hand(hand),
        unterarm(unterarm) {}

    // Konstruktor
    Handgelenk(Unterarm* unterarm,
        Hand* hand,
        ::PrimitiveTypes::Real gierWinkel,
        ::PrimitiveTypes::Real gierWinkelMin,
        ::PrimitiveTypes::Real gierWinkelMax
    ) : 
        Scharniergelenk(),
        unterarm(unterarm),
        hand(hand),
		fg(gierWinkel, gierWinkelMin, gierWinkelMax) {}
    
    static Handgelenk* erzeugeLinkesHandgelenk(
        Unterarm* unterarm,
        Hand* hand,
        NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt
    );

    static Handgelenk* erzeugeRechtesHandgelenk(
        Unterarm* unterarm,
        Hand* hand,
        NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt
    );

	/**
	 * 
	 * @param winkel 
	 */
	void giereHandgelenk(::PrimitiveTypes::Real /*in*/winkel);

	/**
	 * 
	 * @return result 
	 */
	::PrimitiveTypes::Real getGierWinkel();

	/**
	 * 
	 * @return result 
	 */
	::PrimitiveTypes::Real getGierWinkelMax();

	/**
	 * 
	 * @return result 
	 */
	::PrimitiveTypes::Real getGierWinkelMin();

	Unterarm* getUnterarm();

	Hand* getHand();

private:

	/**
	 * 
	 */
	Unterarm* unterarm;

	/**
	 * 
	 */
	Hand* hand;
};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace Arm
} // of namespace Roboterverwaltung
} // of namespace Modellierung
} // of namespace NaoSimulation

/************************************************************
 End of Handgelenk class header
 ************************************************************/

#endif
