// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define NaoSimulation_Modellierung_Roboterverwaltung_Arm_Ellenbogen_BODY

/************************************************************
 Ellenbogen class body
 ************************************************************/

// include associated header file
#include "Ellenbogen.h"


namespace NaoSimulation {
namespace Modellierung {
namespace Roboterverwaltung {
namespace Arm {

Ellenbogen* Ellenbogen::erzeugeLinkenEllenbogen(
    Oberarm* oberarm,
    Unterarm* unterarm,
    NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt
) {
    Ellenbogen* ellenbogen = new Ellenbogen(
        oberarm,
        unterarm,
        -0.0349,
        linkerEllenbogenRollenParams.minWinkel,
        linkerEllenbogenRollenParams.maxWinkel,
        0.0,
        linkerEllenbogenGierenParams.minWinkel,
        linkerEllenbogenGierenParams.maxWinkel
    );

    ellenbogen->setODEZwischenkoerper(NaoSimulation::Entwurf::NaoModel::ODE::erzeugeODEBody(
        linkerEllenbogenZwischenkoerper.masse,
        linkerEllenbogenZwischenkoerper.position,
        linkerEllenbogenZwischenkoerper.ausrichtung,
        linkerEllenbogenZwischenkoerper.radius,
        linkerEllenbogenZwischenkoerper.hoehe,
        welt
    ));

    ellenbogen->setODEGelenk1(NaoSimulation::Entwurf::NaoModel::ODE::erzeugeODEGelenk(
        linkerEllenbogenRollenParams.position,
        linkerEllenbogenRollenParams.ausrichtung,
        linkerEllenbogenRollenParams.maxGeschwindigkeit,
        linkerEllenbogenRollenParams.maxWinkel,
        linkerEllenbogenRollenParams.minWinkel,
        welt,
        ellenbogen->getOberarm()->getOdeKoerperteil(),
        ellenbogen->getODEZwischenkoerper()
    ));

    ellenbogen->setODEGelenk2(NaoSimulation::Entwurf::NaoModel::ODE::erzeugeODEGelenk(
        linkerEllenbogenGierenParams.position,
        linkerEllenbogenGierenParams.ausrichtung,
        linkerEllenbogenGierenParams.maxGeschwindigkeit,
        linkerEllenbogenGierenParams.maxWinkel,
        linkerEllenbogenGierenParams.minWinkel,
        welt,
        ellenbogen->getODEZwischenkoerper(),
        ellenbogen->getUnterarm()->getOdeKoerperteil()
    ));
    
    return ellenbogen;
}

Ellenbogen* Ellenbogen::erzeugeRechterEllenbogen(
    Oberarm* oberarm,
    Unterarm* unterarm,
    NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt
) {
    Ellenbogen* ellenbogen = new Ellenbogen(
        oberarm,
        unterarm,
        0.0349,
        rechterEllenbogenRollenParams.minWinkel,
        rechterEllenbogenRollenParams.maxWinkel,
        0.0,
        rechterEllenbogenGierenParams.minWinkel,
        rechterEllenbogenGierenParams.maxWinkel
    );

    ellenbogen->setODEZwischenkoerper(NaoSimulation::Entwurf::NaoModel::ODE::erzeugeODEBody(
        rechterEllenbogenZwischenkoerper.masse,
        rechterEllenbogenZwischenkoerper.position,
        rechterEllenbogenZwischenkoerper.ausrichtung,
        rechterEllenbogenZwischenkoerper.radius,
        rechterEllenbogenZwischenkoerper.hoehe,
        welt
    ));

    ellenbogen->setODEGelenk1(NaoSimulation::Entwurf::NaoModel::ODE::erzeugeODEGelenk(
        rechterEllenbogenRollenParams.position,
        rechterEllenbogenRollenParams.ausrichtung,
        rechterEllenbogenRollenParams.maxGeschwindigkeit,
        rechterEllenbogenRollenParams.maxWinkel,
        rechterEllenbogenRollenParams.minWinkel,
        welt,
        ellenbogen->getOberarm()->getOdeKoerperteil(),
        ellenbogen->getODEZwischenkoerper()
    ));
    
    ellenbogen->setODEGelenk2(NaoSimulation::Entwurf::NaoModel::ODE::erzeugeODEGelenk(
        rechterEllenbogenGierenParams.position,
        rechterEllenbogenGierenParams.ausrichtung,
        rechterEllenbogenGierenParams.maxGeschwindigkeit,
        rechterEllenbogenGierenParams.maxWinkel,
        rechterEllenbogenGierenParams.minWinkel,
        welt,
        ellenbogen->getODEZwischenkoerper(),
        ellenbogen->getUnterarm()->getOdeKoerperteil()
    ));
    
    return ellenbogen;
}

/**
 * 
 * @param winkel 
 */
void Ellenbogen::giereEllenbogen(::PrimitiveTypes::Real /*in*/winkel) {
	NaoSimulation::Entwurf::NaoModel::ODE::bewegeGelenk(odeGelenk2, winkel, &bewegtSich);
}

::PrimitiveTypes::Real Ellenbogen::getGierWinkel() {
	return fg[0].getWinkel();
}

/**
 * 
 * @return result 
 */
::PrimitiveTypes::Real Ellenbogen::getGierWInkelMax() {
	return fg[0].getWinkelMax();
}

/**
 * 
 * @return result 
 */
::PrimitiveTypes::Real Ellenbogen::getGierWinkelMin() {
	return fg[0].getWinkelMin();
}

/**
 * 
 * @param winkel 
 */
void Ellenbogen::rolleEllenbogen(::PrimitiveTypes::Real /*in*/winkel) {
	// ODEGelenk1 ist fuer das "Rollen" zustaendig
    NaoSimulation::Entwurf::NaoModel::ODE::bewegeGelenk(odeGelenk1, winkel, &bewegtSich);
}


/**
 * 
 * @return result 
 */
::PrimitiveTypes::Real Ellenbogen::getRollWinkel() {
	return fg[1].getWinkel();
}

/**
 * 
 * @return result 
 */
::PrimitiveTypes::Real Ellenbogen::getRollWinkelMax() {
	return fg[1].getWinkelMax();
}

/**
 * 
 * @return result 
 */
::PrimitiveTypes::Real Ellenbogen::getRollWinkelMin() {
	return fg[1].getWinkelMin();
}

Unterarm* Ellenbogen::getUnterarm() {
	return this->unterarm;
}

Oberarm* Ellenbogen::getOberarm() {
	return this->oberarm;
}

} // of namespace Arm
} // of namespace Roboterverwaltung
} // of namespace Modellierung
} // of namespace NaoSimulation

/************************************************************
 End of Ellenbogen class body
 ************************************************************/
