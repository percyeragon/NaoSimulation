// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define NaoSimulation_Modellierung_Roboterverwaltung_Kopf_Kopf_BODY

/************************************************************
 Kopf class body
 ************************************************************/

// include associated header file
#include "Kopf.h"


namespace NaoSimulation {
namespace Modellierung {
namespace Roboterverwaltung {
namespace Kopf {
using namespace Rumpf;

Kopf::~Kopf() {
	delete schaedel;
	delete halsgelenk;
}

Kopf* Kopf::erzeugeKopf(
	Schaedel *schaedel,
	Torso *torso,
	Halsgelenk *halsgelenk,
	NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt
) {
	// Teste, ob in den Parametern Koerperteile oder Gelenke uebergeben wurden (jeweils != nullptr)
	// sonst erzeuge das jeweilige Koerperteil/Gelenk
	schaedel 	    = schaedel   == nullptr 	? Schaedel::erzeugeSchaedel(welt) 					                : schaedel;
	torso	        = torso      == nullptr 	? Torso::erzeugeTorso(welt) 						                : torso;
	halsgelenk		= halsgelenk == nullptr 	? Halsgelenk::erzeugeHalsgelenk(schaedel,torso,welt) 				: halsgelenk;

	

	// Baue alles im Konstruktor zusammen
	Kopf* kopf = new Kopf(schaedel, torso, halsgelenk);

	return kopf;
}


Schaedel* Kopf::getSchaedel() {
	return schaedel;
}

Torso* Kopf::getTorso() {
	return torso;
}

Halsgelenk* Kopf::getHalsgelenk() {
	return halsgelenk;
}


bool Kopf::inBewegung() {
	// der Arm ist in Bewegung, wenn sich eines der Armgelenke bewegt
	return halsgelenk->inBewegung();
}

} // of namespace Kopf
} // of namespace Roboterverwaltung
} // of namespace Modellierung
} // of namespace NaoSimulation

/************************************************************
 End of Kopf class body
 ************************************************************/
