// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#include "Rumpf/Rumpf.h"
#include "Kopf/Kopf.h"
#define NaoSimulation_Modellierung_Roboterverwaltung_Roboter_BODY

/************************************************************
 Roboter class body
 ************************************************************/

// include associated header file
#include "Roboter.h"


namespace NaoSimulation {
namespace Modellierung {
namespace Roboterverwaltung {

Roboter::Roboter(Roboter& other) : bein(), arm(), rumpf(), kopf()
{
  bein[0] = new ::NaoSimulation::Modellierung::Roboterverwaltung::Bein::Bein(*(other.getLinkesBein()));
  bein[1] = new ::NaoSimulation::Modellierung::Roboterverwaltung::Bein::Bein(*other.getRechtesBein());
  arm[0] = new ::NaoSimulation::Modellierung::Roboterverwaltung::Arm::Arm(*other.getLinkenArm());
  arm[1] = new ::NaoSimulation::Modellierung::Roboterverwaltung::Arm::Arm(*other.getRechtenArm());
  rumpf = new ::NaoSimulation::Modellierung::Roboterverwaltung::Rumpf::Rumpf(*other.getRumpf());
  kopf = new ::NaoSimulation::Modellierung::Roboterverwaltung::Kopf::Kopf(*other.getKopf());
}
Roboter::Roboter(::NaoSimulation::Modellierung::Roboterverwaltung::Bein::Bein* linkesBein,
                 ::NaoSimulation::Modellierung::Roboterverwaltung::Bein::Bein* rechtesBein,
                 ::NaoSimulation::Modellierung::Roboterverwaltung::Arm::Arm* linkenArm,
                 ::NaoSimulation::Modellierung::Roboterverwaltung::Arm::Arm* rechtenArm,
                 ::NaoSimulation::Modellierung::Roboterverwaltung::Rumpf::Rumpf* rumpfex,
                 ::NaoSimulation::Modellierung::Roboterverwaltung::Kopf::Kopf* kopfex) {
  bein[0] = linkesBein; bein[1] = rechtesBein;
  arm[0] = linkenArm; arm[1] = rechtenArm; 
  rumpf=rumpfex; kopf=kopfex;
}


Roboter::~Roboter() {
	// Loesche linkes/rechtes Bein
	delete bein[0];
	delete bein[1];
	// Loesche linken/rechten Arm
	delete arm[0];
	delete arm[1];
	// Loesche Rumpf
	delete rumpf;
	// Loesche Kopf
	delete kopf;
}

Roboter* Roboter::erzeugeRoboter(
	::NaoSimulation::Modellierung::Roboterverwaltung::Bein::Bein* linkesBein,
	::NaoSimulation::Modellierung::Roboterverwaltung::Bein::Bein* rechtesBein,
	::NaoSimulation::Modellierung::Roboterverwaltung::Arm::Arm* linkenArm,
	::NaoSimulation::Modellierung::Roboterverwaltung::Arm::Arm* rechtenArm,
	::NaoSimulation::Modellierung::Roboterverwaltung::Rumpf::Rumpf* rumpf,
	::NaoSimulation::Modellierung::Roboterverwaltung::Kopf::Kopf* kopf,
	NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt
) {
	// Beachte: Die Parameter werden ignoriert !!!
	// Baue den Roboter aus seinen Einzelteilen zusammen
    linkesBein=::NaoSimulation::Modellierung::Roboterverwaltung::Bein::Bein::erzeugeLinkesBein(nullptr, nullptr, nullptr, nullptr, nullptr, welt);
    rechtesBein=::NaoSimulation::Modellierung::Roboterverwaltung::Bein::Bein::erzeugeRechtesBein(nullptr, nullptr, nullptr, nullptr, nullptr, welt);
    linkenArm=::NaoSimulation::Modellierung::Roboterverwaltung::Arm::Arm::erzeugeLinkenArm(nullptr, nullptr, nullptr, nullptr, nullptr, welt);
    rechtenArm=::NaoSimulation::Modellierung::Roboterverwaltung::Arm::Arm::erzeugeRechtenArm(nullptr, nullptr, nullptr, nullptr, nullptr, welt);
	rumpf=::NaoSimulation::Modellierung::Roboterverwaltung::Rumpf::Rumpf::erzeugeRumpf(rechtenArm,linkenArm,rechtesBein,linkesBein,welt);
	kopf=::NaoSimulation::Modellierung::Roboterverwaltung::Kopf::Kopf::erzeugeKopf(nullptr,rumpf->getTorso(), nullptr, welt);

	Roboter* roboter = new Roboter(
		linkesBein,
		rechtesBein,
		linkenArm,
		rechtenArm,
		rumpf,
		kopf
	);

	return roboter;
}

::NaoSimulation::Modellierung::Roboterverwaltung::Bein::Bein* Roboter::getLinkesBein() {
	return bein[0];
}

::NaoSimulation::Modellierung::Roboterverwaltung::Bein::Bein* Roboter::getRechtesBein() {
	return bein[1];
}

::NaoSimulation::Modellierung::Roboterverwaltung::Arm::Arm* Roboter::getLinkenArm() {
	return arm[0];
}

::NaoSimulation::Modellierung::Roboterverwaltung::Arm::Arm* Roboter::getRechtenArm() {
	return arm[1];
}

::NaoSimulation::Modellierung::Roboterverwaltung::Rumpf::Rumpf* Roboter::getRumpf() {
	return rumpf;

}
::NaoSimulation::Modellierung::Roboterverwaltung::Kopf::Kopf* Roboter::getKopf() {
	return kopf;
}

bool Roboter::inBewegung() {
	// der Roboter bewegt sich, wenn sich einer seiner Koerperteile bewegt
	// Hier muss noch der Kopf hinzugefuegt werden ... [ANPASSEN]
	return bein[0]->inBewegung() || bein[1]->inBewegung() || arm[0]->inBewegung() || arm[1]->inBewegung() || kopf->inBewegung();
}

} // of namespace Roboterverwaltung
} // of namespace Modellierung
} // of namespace NaoSimulation

/************************************************************
 End of Roboter class body
 ************************************************************/