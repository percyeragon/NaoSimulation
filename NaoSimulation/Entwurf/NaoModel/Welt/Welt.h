// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef NAOSIMULATIONMODELLENTWURF_ENTWURF_NAOMODEL_WELT_WELT_H
#define NAOSIMULATIONMODELLENTWURF_ENTWURF_NAOMODEL_WELT_WELT_H

/************************************************************
 Welt class header
 ************************************************************/

#include "NaoSimulation/Entwurf/NaoModel/Welt/Pkg_Welt.h"

#include "NaoSimulation/Modellierung/Roboterverwaltung/Roboter.h"
#include "NaoSimulation/Entwurf/NaoModel/ODE/dWorldID.h"

namespace NaoSimulation {
namespace Modellierung {
namespace Roboterverwaltung {
class Roboter;
}
}
}

namespace NaoSimulation {
namespace Entwurf {
namespace NaoModel {
namespace Welt {

/************************************************************/
/**
 * 
 */
class Welt {
private:
	::NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt;
	
	::NaoSimulation::Modellierung::Roboterverwaltung::Roboter *roboter;
public:
	// eigener Copy-Konstruktor
	Welt(Welt& welt) : 
		welt(welt.getODEWelt()),
		roboter(new ::NaoSimulation::Modellierung::Roboterverwaltung::Roboter(*welt.getRoboter())) {}

	// Konstruktor
	Welt() : roboter(nullptr), welt(nullptr) {}

	dWorldID getODEWelt();

	::NaoSimulation::Modellierung::Roboterverwaltung::Roboter* getRoboter();

	void setODEWelt(dWorldID welt);

	void setRoboter(::NaoSimulation::Modellierung::Roboterverwaltung::Roboter* roboter);
};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace Welt
} // of namespace NaoModel
} // of namespace Entwurf
} // of namespace NaoSimulation

/************************************************************
 End of Welt class header
 ************************************************************/

#endif
