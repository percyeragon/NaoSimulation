// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef NAOSIMULATIONMODELLENTWURF_ENTWURF_NAOMODEL_ODE_DJOINTID_H
#define NAOSIMULATIONMODELLENTWURF_ENTWURF_NAOMODEL_ODE_DJOINTID_H

/************************************************************
 dJointID class header
 ************************************************************/

#include <chrono>
#include <thread>

//#include "NaoSimulation/Entwurf/NaoModel/ODE/Pkg_ODE.h"
#include "dWorldID.h"
#include "dBodyID.h"

#include <ode/ode.h>

namespace NaoSimulation {
namespace Entwurf {
namespace NaoModel {
namespace ODE {

/************************************************************/
/**
 * 
 */
typedef dJointID dJointID;

dJointID erzeugeODEGelenk(
    float position[3],
    float ausrichtung[3],
    float maxGeschwindigkeit,
    float maxWinkel,
    float minWinkel,
    NaoSimulation::Entwurf::NaoModel::ODE::dWorldID welt,
    NaoSimulation::Entwurf::NaoModel::ODE::dBodyID body1,
    NaoSimulation::Entwurf::NaoModel::ODE::dBodyID body2
);

// Steuert die Bewegung des Gelenks 'gelenk' solange bis der 'zielWinkel'
// bzw. der Minimal- oder Maximalwinkel erreicht ist
// der Parameter 'inBewegung' gibt im Laufe der Berechung an,
// ob das Gelenk in Bewegung ist oder nicht (wird im Roboter nach oben zur Welt propagiert)
void bewegeGelenk(dJointID gelenk, float zielWinkel, bool* inBewegung);

} // of namespace ODE
} // of namespace NaoModel
} // of namespace Entwurf
} // of namespace NaoSimulation

/************************************************************
 End of dJointID class header
 ************************************************************/

#endif
